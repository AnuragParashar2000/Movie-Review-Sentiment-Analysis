# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TxWFEIxy87jw5Se1NpVQD2A1mmnAkkS-
"""

import streamlit as st
import pickle
import re
import nltk
import numpy as np
from nltk.corpus import stopwords
nltk.download('stopwords')
# from keras.preprocessing.text import Tokenizer
from keras_preprocessing.sequence import pad_sequences

filename = 'model.pkl'
maxlen = 100
pickle_in = open(filename, 'rb')
loaded_model = pickle.load(pickle_in)
pickle_in = open("tokenizer.pkl", 'rb')
word_tokenizer = pickle.load(pickle_in)


def preprocess_text(sen):
    '''Cleans text data up, leaving only 2 or more char long non-stepwords composed of A-Z & a-z only
    in lowercase'''
    
    sentence = sen.lower()

    # Remove punctuations and numbers
    sentence = re.sub('[^a-zA-Z]', ' ', sentence)

    # Single character removal
    sentence = re.sub(r"\s+[a-zA-Z]\s+", ' ', sentence)  # When we remove apostrophe from the word "Mark's", the apostrophe is replaced by an empty space. Hence, we are left with single character "s" that we are removing here.

    # Remove multiple spaces
    sentence = re.sub(r'\s+', ' ', sentence)  # Next, we remove all the single characters and replace it by a space which creates multiple spaces in our text. Finally, we remove the multiple spaces from our text as well.

    # Remove Stopwords
    pattern = re.compile(r'\b(' + r'|'.join(stopwords.words('english')) + r')\b\s*')
    sentence = pattern.sub('', sentence)

    # create sentence embeddings
    wordvec = word_tokenizer.texts_to_sequences([sentence])
    wordvec = pad_sequences(wordvec, padding='post', maxlen=maxlen)

    return wordvec

def checkNews(txt):
    if(txt!=''):
        wordvec = preprocess_text(txt)
        rating = loaded_model.predict(wordvec)
        prediction_text= f"Probable IMDb rating is: {np.round(rating[0][0]*10,1)}"
        st.write(prediction_text)

st.title('Sentiment Analysis')

news = st.text_area('Enter review:')
checkNews(news)

from htbuilder import HtmlElement, div, ul, li, br, hr, a, p, img, styles, classes, fonts
from htbuilder.units import percent, px
from htbuilder.funcs import rgba, rgb


def image(src_as_string, **style):
    return img(src=src_as_string, style=styles(**style))


def link(link, text, **style):
    return a(_href=link, _target="_blank", style=styles(**style))(text)


def layout(*args):

    style = """
    <style>
      # MainMenu {visibility: hidden;}
      footer {visibility: hidden;}
     .stApp { bottom: 105px; }
    </style>
    """

    style_div = styles(
        position="fixed",
        left=0,
        bottom=0,
        margin=px(0, 0, 0, 0),
        width=percent(100),
        color="#F63366",
        text_align="center",
        height="auto",
        opacity=1
    )

    style_hr = styles(
        display="block",
        margin=px(8, 8, "auto", "auto"),
        border_width=px(1)
    )

    body = p()
    foot = div(
        style=style_div
    )(
        hr(
            style=style_hr
        ),
        body
    )

    st.markdown(style, unsafe_allow_html=True)

    for arg in args:
        if isinstance(arg, str):
            body(arg)

        elif isinstance(arg, HtmlElement):
            body(arg)

    st.markdown(str(foot), unsafe_allow_html=True)


# def footer():
#     myargs = [
#         "Made in ",
#         image('https://assets.website-files.com/5dc3b47ddc6c0c2a1af74ad0/5e181828ba9f9e92b6ebc6e7_RGB_Logomark_Color_Light_Bg.png',
#               width=px(25), height=px(25)),
#         " by imt-02",
#         br(),
#         link("https://github.com/alooperalta/Fake-News-Detection-System", image('https://github.com/alooperalta/Fake-News-Detection-System/blob/main/gitLogo.png?raw=true',height="40px")),
#     ]
#     layout(*myargs)

def footer():
    myargs = [
        "Made in ",
        image('https://assets.website-files.com/5dc3b47ddc6c0c2a1af74ad0/5e181828ba9f9e92b6ebc6e7_RGB_Logomark_Color_Light_Bg.png',
              width=px(25), height=px(25)),
        " by Anurag Parashar & Utkarsh Gupta",
        br(),
        # link("https://github.com/alooperalta/Fake-News-Detection-System", image('https://github.com/alooperalta/Fake-News-Detection-System/blob/main/gitLogo.png?raw=true',height="40px")),
    ]
    layout(*myargs)


if __name__ == "__main__":
    footer()